type User {
  id: ID! @id
  username: String! @unique
  email: String! @unique
  firstName: String @default(value: "")
  lastName: String
  bio: String
  avatar: String
  following: [User!]! @relation(name: "FollowRelation")
  followers: [User!]! @relation(name: "FollowRelation")
  posts: [Post!]!
  likes: [Like!]!
  comments: [Comment!]!
  rooms: [Room!]!
  books: [Book!]!
  loginSecret: String
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Post {
  id: ID! @id
  location: String
  caption: String!
  user: User!
  files: [File!]! @relation(name: "FileToPost", onDelete: CASCADE)
  likes: [Like!]! @relation(name: "LikeToPost", onDelete: CASCADE)
  comments: [Comment!]! @relation(name: "CommentToPost", onDelete: CASCADE)
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Like {
  id: ID! @id
  user: User!
  post: Post! @relation(name: "LikeToPost")
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Comment {
  id: ID! @id
  text: String!
  user: User!
  post: Post! @relation(name: "CommentToPost")
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type File {
  id: ID! @id
  url: String!
  post: Post! @relation(name: "FileToPost")
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Image {
  id: ID! @id
  url: String!
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type GgoBook {
  id: ID! @id
  isbn: String!
  title: String!
  author: String!
  publisher: String!
  description: String
  coverLargeUrl: String
  coverSmallUrl: String
  link: String
  mobileLink: String
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Book {
  id: ID! @id
  data: GgoBook!
  user: User!
  memos: [Memo!]! @relation(name: "MemoToBook", onDelete: CASCADE)
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Memo {
  id: ID! @id
  text: String!
  user: User!
  book: Book! @relation(name: "MemoToBook")
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Room {
  id: ID! @id
  participants: [User!]!
  messages: [Message!]!
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Message {
  id: ID! @id
  text: String!
  from: User! @relation(name: "From")
  to: User! @relation(name: "To")
  room: Room!
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}